{
  "address": "0xa09B5a5DdED094Ba656d6416976F1DF62aA889e4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "peth_addr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pusdt_addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPETH",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPUSDT",
          "type": "uint256"
        }
      ],
      "name": "LiquidityAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPETH",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPUSDT",
          "type": "uint256"
        }
      ],
      "name": "LiquidityRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "Swapped",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_PETH",
      "outputs": [
        {
          "internalType": "contract MyERC20Token",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_PUSDT",
      "outputs": [
        {
          "internalType": "contract MyERC20Token",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_reservePETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_reservePUSDT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountPETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountPUSDT",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "liquidityPercent",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "inputToken",
          "type": "address"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x88fed5f381b17947bd9725045696782a04ca7d345a6dc83cf4f929229f7bd321",
  "receipt": {
    "to": null,
    "from": "0xFeb5DDA8bbd9746B0b59b0b84964AF37E9172A8C",
    "contractAddress": "0xa09B5a5DdED094Ba656d6416976F1DF62aA889e4",
    "transactionIndex": 99,
    "gasUsed": "1231686",
    "logsBloom": "0x
    "blockHash": "0x038a8e8f23a120496e2122312053d9198f1d3b900cffdcdd30d559b3278f0bb3",
    "transactionHash": "0x88fed5f381b17947bd9725045696782a04ca7d345a6dc83cf4f929229f7bd321",
    "logs": [],
    "blockNumber": 8136699,
    "cumulativeGasUsed": "8383071",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0642a3a85EE7F9dD52B82caa7C3aE6d8F712427c",
    "0x1a1Dd7994A1bA16BD2a58cd076EbeA69266587D6"
  ],
  "numDeployments": 1,
  "solcInputHash": "f7a632b480df5e8522d489ff52919033",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"peth_addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pusdt_addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPETH\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPUSDT\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPETH\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPUSDT\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_PETH\",\"outputs\":[{\"internalType\":\"contract MyERC20Token\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PUSDT\",\"outputs\":[{\"internalType\":\"contract MyERC20Token\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_reservePETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_reservePUSDT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountPETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountPUSDT\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityPercent\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LPSwap.sol\":\"LPSwap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/LPSwap.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.24;\\n\\nimport \\\"./MyERC20Token.sol\\\";\\n\\n\\n// \\u8fd9\\u91cc\\u8f93\\u5165\\u7684PETH\\u4e0ePUSDT\\u7684\\u5355\\u4f4d\\u9700\\u8981\\u662fwei\\uff08\\u4e5f\\u5c31\\u662f\\u8981\\u4e58\\u4ee51e18\\uff09\\uff0c\\u56e0\\u4e3a\\u667a\\u80fd\\u5408\\u7ea6\\u4e0d\\u80fd\\u8f93\\u5165\\u5c0f\\u6570\\u3002\\n//      \\u5b9e\\u9645\\u4f7f\\u7528\\u8fc7\\u7a0b\\u4e2d\\u524d\\u7aef\\u5141\\u8bb8\\u8f93\\u5165\\u5c0f\\u6570\\uff0c\\u7136\\u540e\\u524d\\u7aef\\u8f6c\\u6362\\u4e3a\\u6574\\u6570\\u540e\\u8c03\\u7528\\u667a\\u80fd\\u5408\\u7ea6\\u3002\\n\\ncontract LPSwap {\\n    \\n    // ========================================== \\u53d8\\u91cf\\u5b9a\\u4e49\\n    // pair\\n    MyERC20Token public _PETH;\\n    MyERC20Token public _PUSDT;\\n\\n    // \\u6d41\\u52a8\\u6027\\u6c60\\u5b50\\u4e2dpair\\u5404\\u81ea\\u7684\\u6570\\u91cf\\n    uint256 public _reservePETH;\\n    uint256 public _reservePUSDT;\\n\\n    // ========================================== \\u4e8b\\u4ef6\\u5b9a\\u4e49\\n    event LiquidityAdded(address indexed provider, uint256 amountPETH, uint256 amountPUSDT);\\n    event LiquidityRemoved(address indexed provider, uint256 amountPETH, uint256 amountPUSDT);\\n    event Swapped(\\n        address indexed user,\\n        address indexed tokenIn,\\n        uint256 amountIn,\\n        address indexed tokenOut,\\n        uint256 amountOut\\n    );\\n\\n    // ========================================== \\u5b8f\\u5b9a\\u4e49\\n\\n\\n    // ========================================== \\u51fd\\u6570\\u5b9a\\u4e49\\n    constructor(address peth_addr, address pusdt_addr) {\\n        _PETH = MyERC20Token(peth_addr);\\n        _PUSDT = MyERC20Token(pusdt_addr);\\n    }\\n\\n    // \\u6dfb\\u52a0\\u6d41\\u52a8\\u6027\\n    function addLiquidity(uint256 amountPETH, uint256 amountPUSDT) external {\\n        require( (amountPETH>0 && amountPUSDT>0), \\\"Amounts must be greater than 0!\\\");\\n\\n        // \\u9996\\u6b21\\u6dfb\\u52a0\\u76f4\\u63a5\\u6839\\u636e\\u8f93\\u5165\\u6570\\u91cf\\u786e\\u5b9a\\uff0c\\u975e\\u9996\\u6b21\\u6dfb\\u52a0\\u9700\\u8981\\u8ba1\\u7b97\\u662f\\u5426\\u6ee1\\u8db3K\\u7684\\uff08\\u591a\\u4f59\\u7684U\\u8f6c\\u56de\\u7ed9\\u8c03\\u7528\\u8005\\uff09\\n        if (_reservePETH != 0 && _reservePUSDT != 0) {  // \\u975e\\u9996\\u6b21\\u6dfb\\u52a0\\u6d41\\u52a8\\u6027\\n\\n            // \\u68c0\\u67e5\\u53d1\\u9001\\u7684U\\u6bd4\\u4f8b\\u662f\\u5426\\u6b63\\u786e\\uff08\\uff09\\n            //      \\u4ea4\\u6613\\u4fdd\\u8bc1k\\u4e0d\\u53d8\\uff1ax * y = k\\n            //      \\u6dfb\\u52a0\\u6d41\\u52a8\\u6027\\u4fdd\\u8bc1pair\\u6bd4\\u4f8b\\u4e0d\\u53d8\\uff1ax'/y' = x/y\\n            uint256 expectedPUSDT = (amountPETH * _reservePUSDT) / _reservePETH;  // \\u4f7f\\u7528 x'/y' = x/y \\u63a8\\n            require(amountPUSDT >= expectedPUSDT, \\\"Need more PUSDT amount!\\\");\\n\\n            // \\u66f4\\u65b0amountPUSDT\\uff0c\\u5e76\\u4e14\\u9000\\u8fd8\\u591a\\u7684amountPUSDT\\n            if (amountPUSDT > expectedPUSDT) {\\n                amountPUSDT = expectedPUSDT;\\n\\n                // \\u9000\\u8fd8\\u591a\\u4f59\\u7684\\u90e8\\u5206\\n                uint256 excess = amountPUSDT - expectedPUSDT;\\n                _PUSDT.transfer(msg.sender, excess);\\n            }\\n        }\\n\\n        // \\u8f6c\\u79fb\\u4ee3\\u5e01\\n        _PETH.transferFrom(msg.sender, address(this), amountPETH);\\n        _PUSDT.transferFrom(msg.sender, address(this), amountPUSDT);\\n\\n        // \\u66f4\\u65b0\\u6c60\\u5b50\\u4e2dpair\\u7684\\u6570\\u91cf\\n        _reservePETH += amountPETH;\\n        _reservePUSDT += amountPUSDT;\\n        \\n        emit LiquidityAdded(msg.sender, amountPETH, amountPUSDT);\\n    } \\n\\n    // \\u79fb\\u9664\\u6d41\\u52a8\\u6027\\uff08\\u8981\\u79fb\\u9664\\u7684\\u6d41\\u52a8\\u6027\\u767e\\u5206\\u6bd4(1-100)\\uff09\\n    function removeLiquidity(uint256 liquidityPercent) external {\\n        require((liquidityPercent > 0 && liquidityPercent <= 100), \\\"Invalid percentage!\\\");\\n\\n        // \\u8ba1\\u7b97\\u8981\\u79fb\\u9664\\u7684\\u6570\\u91cf\\n        uint256 amountPETH = (_reservePETH * liquidityPercent) / 100;\\n        uint256 amountPUSDT = (_reservePUSDT * liquidityPercent) / 100;\\n        require((amountPETH > 0 && amountPUSDT > 0), \\\"Insufficient liquidity\\\");\\n        \\n        // \\u76f4\\u63a5\\u66f4\\u65b0\\u50a8\\u5907\\n        _reservePETH -= amountPETH;\\n        _reservePUSDT -= amountPUSDT;\\n        \\n        // \\u8fd4\\u8fd8\\u4ee3\\u5e01\\u7ed9\\u8c03\\u7528\\u8005\\n        _PETH.transfer(msg.sender, amountPETH);\\n        _PUSDT.transfer(msg.sender, amountPUSDT);\\n        \\n        emit LiquidityRemoved(msg.sender, amountPETH, amountPUSDT);\\n    }\\n\\n    // \\u4ea4\\u6362\\u4ee3\\u5e01\\n    function swap(\\n        uint256 amountIn,\\n        address inputToken\\n    ) external returns (uint256 amountOut) {\\n\\n        require(amountIn > 0, \\\"Input amount must be positive\\\");\\n        require(\\n            inputToken == address(_PETH) || inputToken == address(_PUSDT),\\n            \\\"Invalid input token\\\"\\n        );\\n        \\n        // \\u5f97\\u5230\\u8f93\\u5165\\u4e0e\\u8f93\\u51fa\\u4ee3\\u5e01\\n        bool isPETH = inputToken == address(_PETH);\\n        uint256 reserveIn = isPETH ? _reservePETH : _reservePUSDT;\\n        uint256 reserveOut = isPETH ? _reservePUSDT : _reservePETH;\\n        \\n        // \\u8ba1\\u7b97\\u8f93\\u51fa\\u4ee3\\u5e01\\u7684\\u6570\\u91cf\\uff1a(reserveIn + amountIn) * (reserveOut - amountOut) = reserveIn * reserveOut\\n        amountOut = (amountIn * reserveOut) / (reserveIn + amountIn);\\n        \\n        // \\u66f4\\u65b0\\u50a8\\u5907,\\u6267\\u884c\\u8f6c\\u8d26\\n        if (isPETH) {\\n            _reservePETH += amountIn;\\n            _reservePUSDT -= amountOut;\\n\\n            // \\u6267\\u884c\\u8f6c\\u8d26\\n            _PETH.transferFrom(msg.sender, address(this), amountIn);\\n            _PUSDT.transfer(msg.sender, amountOut);\\n        } else {\\n            _reservePUSDT += amountIn;\\n            _reservePETH -= amountOut;\\n\\n            // \\u6267\\u884c\\u8f6c\\u8d26\\n            _PUSDT.transferFrom(msg.sender, address(this), amountIn);\\n            _PETH.transfer(msg.sender, amountOut);\\n        }\\n\\n    }\\n\\n    // \\u83b7\\u53d6\\u5f53\\u524d\\u4ef7\\u683c(1 PETH = ? PUSDT)\\n    function getPrice() public view returns (uint256) {\\n        if (_reservePUSDT == 0 || _reservePETH == 0) revert(\\\"No liquidity\\\");\\n\\n        return (_reservePUSDT * 1e18) / _reservePETH; // \\u5e2618\\u4f4d\\u7cbe\\u5ea6\\n    }\\n\\n\\n}\\n\",\"keccak256\":\"0x9ffd919e395e7e20ce0d30356e3c7a467e066cfb67c5251fca71186f6bb22aca\",\"license\":\"UNLICENSED\"},\"contracts/MyERC20Token.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.24;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract MyERC20Token is ERC20 {\\n\\n    // ========================================== \\u53d8\\u91cf\\u5b9a\\u4e49\\n    address public _owner;  // \\u521b\\u5efa\\u8005\\n\\n    // ========================================== \\u4e8b\\u4ef6\\u5b9a\\u4e49\\n    event Mint(address indexed to, uint256 amount);\\n    event Burn(address indexed from, uint256 amount);\\n\\n    // ========================================== \\u5b8f\\u5b9a\\u4e49\\n    // \\u4ec5\\u4ec5owner\\u53ef\\u64cd\\u4f5c\\n    modifier OnlyOwner() {\\n        require(_owner == msg.sender, \\\"Only owner can call this!\\\");\\n        _;\\n    }\\n    // \\u67d0\\u4e2a\\u8d26\\u6237\\u53ef\\u64cd\\u4f5c\\u4f59\\u989d\\u5145\\u8db3\\n    modifier Balancesufficient(address addr, uint256 amount) {\\n        require(balanceOf(addr) >= amount, \\\"Balance insufficient!\\\");\\n        _;\\n    }\\n\\n    // ========================================== \\u51fd\\u6570\\u5b9a\\u4e49\\n    // \\u6784\\u9020\\u51fd\\u6570\\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\\n        _owner = msg.sender;\\n    }\\n\\n    // mint\\u51fd\\u6570\\uff08\\u8c03\\u7528 ERC20 \\u5185\\u90e8\\u81ea\\u5df1\\u7684 _mint \\u51fd\\u6570\\uff09\\n    function mint(address to, uint256 amount) external OnlyOwner{\\n        _mint(to, amount);\\n        emit Mint(to, amount);\\n    }\\n\\n    // burn\\u51fd\\u6570\\uff08\\u8c03\\u7528 ERC20 \\u5185\\u90e8\\u81ea\\u5df1\\u7684 _burn \\u51fd\\u6570\\uff09\\n    function burn(address from, uint256 amount) external OnlyOwner Balancesufficient(from, amount){\\n        _burn(from, amount);\\n\\n        emit Burn(from, amount);\\n    }\\n\\n}\",\"keccak256\":\"0x21002c96b0ac46bf00a5214df2ed5c4f5453b36f57876af5d7161681d7b9133a\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516115e53803806115e58339818101604052810190610032919061011d565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061015d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b60008060408385031215610134576101336100ba565b5b600061014285828601610108565b925050602061015385828601610108565b9150509250929050565b6114798061016c6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639cd441da1161005b5780639cd441da14610103578063c07ba2031461011f578063d3986f081461013d578063ff89a51f1461016d57610088565b806339fc60621461008d57806363232898146100ab57806398d5fdca146100c95780639c8f9f23146100e7575b600080fd5b61009561018b565b6040516100a29190610d37565b60405180910390f35b6100b3610191565b6040516100c09190610d37565b60405180910390f35b6100d1610197565b6040516100de9190610d37565b60405180910390f35b61010160048036038101906100fc9190610d83565b610213565b005b61011d60048036038101906101189190610db0565b6104b5565b005b61012761080b565b6040516101349190610e6f565b60405180910390f35b61015760048036038101906101529190610ec8565b610831565b6040516101649190610d37565b60405180910390f35b610175610cfa565b6040516101829190610e6f565b60405180910390f35b60035481565b60025481565b60008060035414806101ab57506000600254145b156101eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e290610f65565b60405180910390fd5b600254670de0b6b3a76400006003546102049190610fb4565b61020e9190611025565b905090565b600081118015610224575060648111155b610263576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025a906110a2565b60405180910390fd5b60006064826002546102759190610fb4565b61027f9190611025565b905060006064836003546102939190610fb4565b61029d9190611025565b90506000821180156102af5750600081115b6102ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e59061110e565b60405180910390fd5b8160026000828254610300919061112e565b925050819055508060036000828254610319919061112e565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161037b929190611171565b6020604051808303816000875af115801561039a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103be91906111d2565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161041c929190611171565b6020604051808303816000875af115801561043b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045f91906111d2565b503373ffffffffffffffffffffffffffffffffffffffff167f96cd817c6329656790ef8fba7675405193677d39619571282f5e21f3a98cd05983836040516104a89291906111ff565b60405180910390a2505050565b6000821180156104c55750600081115b610504576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fb90611274565b60405180910390fd5b60006002541415801561051a5750600060035414155b15610641576000600254600354846105329190610fb4565b61053c9190611025565b905080821015610581576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610578906112e0565b60405180910390fd5b8082111561063f578091506000818361059a919061112e565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016105f9929190611171565b6020604051808303816000875af1158015610618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063c91906111d2565b50505b505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161069e93929190611300565b6020604051808303816000875af11580156106bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e191906111d2565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161074193929190611300565b6020604051808303816000875af1158015610760573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078491906111d2565b5081600260008282546107979190611337565b9250508190555080600360008282546107b09190611337565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee4583836040516107ff9291906111ff565b60405180910390a25050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808311610875576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086c906113b7565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148061091c5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b61095b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095290611423565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161490506000816109be576003546109c2565b6002545b90506000826109d3576002546109d7565b6003545b905085826109e59190611337565b81876109f19190610fb4565b6109fb9190611025565b93508215610b7c578560026000828254610a159190611337565b925050819055508360036000828254610a2e919061112e565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b8152600401610a9293929190611300565b6020604051808303816000875af1158015610ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad591906111d2565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610b33929190611171565b6020604051808303816000875af1158015610b52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7691906111d2565b50610cf1565b8560036000828254610b8e9190611337565b925050819055508360026000828254610ba7919061112e565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b8152600401610c0d93929190611300565b6020604051808303816000875af1158015610c2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5091906111d2565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610cac929190611171565b6020604051808303816000875af1158015610ccb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cef91906111d2565b505b50505092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b610d3181610d1e565b82525050565b6000602082019050610d4c6000830184610d28565b92915050565b600080fd5b610d6081610d1e565b8114610d6b57600080fd5b50565b600081359050610d7d81610d57565b92915050565b600060208284031215610d9957610d98610d52565b5b6000610da784828501610d6e565b91505092915050565b60008060408385031215610dc757610dc6610d52565b5b6000610dd585828601610d6e565b9250506020610de685828601610d6e565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e35610e30610e2b84610df0565b610e10565b610df0565b9050919050565b6000610e4782610e1a565b9050919050565b6000610e5982610e3c565b9050919050565b610e6981610e4e565b82525050565b6000602082019050610e846000830184610e60565b92915050565b6000610e9582610df0565b9050919050565b610ea581610e8a565b8114610eb057600080fd5b50565b600081359050610ec281610e9c565b92915050565b60008060408385031215610edf57610ede610d52565b5b6000610eed85828601610d6e565b9250506020610efe85828601610eb3565b9150509250929050565b600082825260208201905092915050565b7f4e6f206c69717569646974790000000000000000000000000000000000000000600082015250565b6000610f4f600c83610f08565b9150610f5a82610f19565b602082019050919050565b60006020820190508181036000830152610f7e81610f42565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fbf82610d1e565b9150610fca83610d1e565b9250828202610fd881610d1e565b91508282048414831517610fef57610fee610f85565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061103082610d1e565b915061103b83610d1e565b92508261104b5761104a610ff6565b5b828204905092915050565b7f496e76616c69642070657263656e746167652100000000000000000000000000600082015250565b600061108c601383610f08565b915061109782611056565b602082019050919050565b600060208201905081810360008301526110bb8161107f565b9050919050565b7f496e73756666696369656e74206c697175696469747900000000000000000000600082015250565b60006110f8601683610f08565b9150611103826110c2565b602082019050919050565b60006020820190508181036000830152611127816110eb565b9050919050565b600061113982610d1e565b915061114483610d1e565b925082820390508181111561115c5761115b610f85565b5b92915050565b61116b81610e8a565b82525050565b60006040820190506111866000830185611162565b6111936020830184610d28565b9392505050565b60008115159050919050565b6111af8161119a565b81146111ba57600080fd5b50565b6000815190506111cc816111a6565b92915050565b6000602082840312156111e8576111e7610d52565b5b60006111f6848285016111bd565b91505092915050565b60006040820190506112146000830185610d28565b6112216020830184610d28565b9392505050565b7f416d6f756e7473206d7573742062652067726561746572207468616e20302100600082015250565b600061125e601f83610f08565b915061126982611228565b602082019050919050565b6000602082019050818103600083015261128d81611251565b9050919050565b7f4e656564206d6f726520505553445420616d6f756e7421000000000000000000600082015250565b60006112ca601783610f08565b91506112d582611294565b602082019050919050565b600060208201905081810360008301526112f9816112bd565b9050919050565b60006060820190506113156000830186611162565b6113226020830185611162565b61132f6040830184610d28565b949350505050565b600061134282610d1e565b915061134d83610d1e565b925082820190508082111561136557611364610f85565b5b92915050565b7f496e70757420616d6f756e74206d75737420626520706f736974697665000000600082015250565b60006113a1601d83610f08565b91506113ac8261136b565b602082019050919050565b600060208201905081810360008301526113d081611394565b9050919050565b7f496e76616c696420696e70757420746f6b656e00000000000000000000000000600082015250565b600061140d601383610f08565b9150611418826113d7565b602082019050919050565b6000602082019050818103600083015261143c81611400565b905091905056fea2646970667358221220d825f179ab8dc553ebb6bcb0a36136e159ee18ea2322844995cdc1b0702ea18a64736f6c634300081c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80639cd441da1161005b5780639cd441da14610103578063c07ba2031461011f578063d3986f081461013d578063ff89a51f1461016d57610088565b806339fc60621461008d57806363232898146100ab57806398d5fdca146100c95780639c8f9f23146100e7575b600080fd5b61009561018b565b6040516100a29190610d37565b60405180910390f35b6100b3610191565b6040516100c09190610d37565b60405180910390f35b6100d1610197565b6040516100de9190610d37565b60405180910390f35b61010160048036038101906100fc9190610d83565b610213565b005b61011d60048036038101906101189190610db0565b6104b5565b005b61012761080b565b6040516101349190610e6f565b60405180910390f35b61015760048036038101906101529190610ec8565b610831565b6040516101649190610d37565b60405180910390f35b610175610cfa565b6040516101829190610e6f565b60405180910390f35b60035481565b60025481565b60008060035414806101ab57506000600254145b156101eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e290610f65565b60405180910390fd5b600254670de0b6b3a76400006003546102049190610fb4565b61020e9190611025565b905090565b600081118015610224575060648111155b610263576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025a906110a2565b60405180910390fd5b60006064826002546102759190610fb4565b61027f9190611025565b905060006064836003546102939190610fb4565b61029d9190611025565b90506000821180156102af5750600081115b6102ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e59061110e565b60405180910390fd5b8160026000828254610300919061112e565b925050819055508060036000828254610319919061112e565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161037b929190611171565b6020604051808303816000875af115801561039a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103be91906111d2565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161041c929190611171565b6020604051808303816000875af115801561043b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045f91906111d2565b503373ffffffffffffffffffffffffffffffffffffffff167f96cd817c6329656790ef8fba7675405193677d39619571282f5e21f3a98cd05983836040516104a89291906111ff565b60405180910390a2505050565b6000821180156104c55750600081115b610504576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fb90611274565b60405180910390fd5b60006002541415801561051a5750600060035414155b15610641576000600254600354846105329190610fb4565b61053c9190611025565b905080821015610581576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610578906112e0565b60405180910390fd5b8082111561063f578091506000818361059a919061112e565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016105f9929190611171565b6020604051808303816000875af1158015610618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063c91906111d2565b50505b505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161069e93929190611300565b6020604051808303816000875af11580156106bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e191906111d2565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161074193929190611300565b6020604051808303816000875af1158015610760573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078491906111d2565b5081600260008282546107979190611337565b9250508190555080600360008282546107b09190611337565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee4583836040516107ff9291906111ff565b60405180910390a25050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808311610875576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086c906113b7565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148061091c5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b61095b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095290611423565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161490506000816109be576003546109c2565b6002545b90506000826109d3576002546109d7565b6003545b905085826109e59190611337565b81876109f19190610fb4565b6109fb9190611025565b93508215610b7c578560026000828254610a159190611337565b925050819055508360036000828254610a2e919061112e565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b8152600401610a9293929190611300565b6020604051808303816000875af1158015610ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad591906111d2565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610b33929190611171565b6020604051808303816000875af1158015610b52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7691906111d2565b50610cf1565b8560036000828254610b8e9190611337565b925050819055508360026000828254610ba7919061112e565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b8152600401610c0d93929190611300565b6020604051808303816000875af1158015610c2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5091906111d2565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610cac929190611171565b6020604051808303816000875af1158015610ccb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cef91906111d2565b505b50505092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b610d3181610d1e565b82525050565b6000602082019050610d4c6000830184610d28565b92915050565b600080fd5b610d6081610d1e565b8114610d6b57600080fd5b50565b600081359050610d7d81610d57565b92915050565b600060208284031215610d9957610d98610d52565b5b6000610da784828501610d6e565b91505092915050565b60008060408385031215610dc757610dc6610d52565b5b6000610dd585828601610d6e565b9250506020610de685828601610d6e565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e35610e30610e2b84610df0565b610e10565b610df0565b9050919050565b6000610e4782610e1a565b9050919050565b6000610e5982610e3c565b9050919050565b610e6981610e4e565b82525050565b6000602082019050610e846000830184610e60565b92915050565b6000610e9582610df0565b9050919050565b610ea581610e8a565b8114610eb057600080fd5b50565b600081359050610ec281610e9c565b92915050565b60008060408385031215610edf57610ede610d52565b5b6000610eed85828601610d6e565b9250506020610efe85828601610eb3565b9150509250929050565b600082825260208201905092915050565b7f4e6f206c69717569646974790000000000000000000000000000000000000000600082015250565b6000610f4f600c83610f08565b9150610f5a82610f19565b602082019050919050565b60006020820190508181036000830152610f7e81610f42565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fbf82610d1e565b9150610fca83610d1e565b9250828202610fd881610d1e565b91508282048414831517610fef57610fee610f85565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061103082610d1e565b915061103b83610d1e565b92508261104b5761104a610ff6565b5b828204905092915050565b7f496e76616c69642070657263656e746167652100000000000000000000000000600082015250565b600061108c601383610f08565b915061109782611056565b602082019050919050565b600060208201905081810360008301526110bb8161107f565b9050919050565b7f496e73756666696369656e74206c697175696469747900000000000000000000600082015250565b60006110f8601683610f08565b9150611103826110c2565b602082019050919050565b60006020820190508181036000830152611127816110eb565b9050919050565b600061113982610d1e565b915061114483610d1e565b925082820390508181111561115c5761115b610f85565b5b92915050565b61116b81610e8a565b82525050565b60006040820190506111866000830185611162565b6111936020830184610d28565b9392505050565b60008115159050919050565b6111af8161119a565b81146111ba57600080fd5b50565b6000815190506111cc816111a6565b92915050565b6000602082840312156111e8576111e7610d52565b5b60006111f6848285016111bd565b91505092915050565b60006040820190506112146000830185610d28565b6112216020830184610d28565b9392505050565b7f416d6f756e7473206d7573742062652067726561746572207468616e20302100600082015250565b600061125e601f83610f08565b915061126982611228565b602082019050919050565b6000602082019050818103600083015261128d81611251565b9050919050565b7f4e656564206d6f726520505553445420616d6f756e7421000000000000000000600082015250565b60006112ca601783610f08565b91506112d582611294565b602082019050919050565b600060208201905081810360008301526112f9816112bd565b9050919050565b60006060820190506113156000830186611162565b6113226020830185611162565b61132f6040830184610d28565b949350505050565b600061134282610d1e565b915061134d83610d1e565b925082820190508082111561136557611364610f85565b5b92915050565b7f496e70757420616d6f756e74206d75737420626520706f736974697665000000600082015250565b60006113a1601d83610f08565b91506113ac8261136b565b602082019050919050565b600060208201905081810360008301526113d081611394565b9050919050565b7f496e76616c696420696e70757420746f6b656e00000000000000000000000000600082015250565b600061140d601383610f08565b9150611418826113d7565b602082019050919050565b6000602082019050818103600083015261143c81611400565b905091905056fea2646970667358221220d825f179ab8dc553ebb6bcb0a36136e159ee18ea2322844995cdc1b0702ea18a64736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1617,
        "contract": "contracts/LPSwap.sol:LPSwap",
        "label": "_PETH",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(MyERC20Token)2123"
      },
      {
        "astId": 1620,
        "contract": "contracts/LPSwap.sol:LPSwap",
        "label": "_PUSDT",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(MyERC20Token)2123"
      },
      {
        "astId": 1622,
        "contract": "contracts/LPSwap.sol:LPSwap",
        "label": "_reservePETH",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1624,
        "contract": "contracts/LPSwap.sol:LPSwap",
        "label": "_reservePUSDT",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_contract(MyERC20Token)2123": {
        "encoding": "inplace",
        "label": "contract MyERC20Token",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}